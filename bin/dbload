#!/usr/bin/perl -w
use strict;

use FindBin;
my $TOP;
BEGIN { $TOP = "$FindBin::RealBin/.." }
use lib "$TOP/lib";

use Getopt::Long;
use Loom::DB::GNU;
use Loom::Format::KV;

main->new->run;

sub new
	{
	my $class = shift;
	my $s = bless({},$class);
	return $s;
	}

sub run
	{
	my $s = shift;
	my $opt = {};

	$s->usage() if !GetOptions($opt,"h");
	$s->usage() if $opt->{h};

	my $db_name = shift @ARGV;

	$s->usage() if !defined $db_name;

	if (-e $db_name)
		{
		print STDERR "The database '$db_name' already exists.\n";
		exit(2);
		}

	$s->hash_load($db_name);
	}

sub hash_load
	{
	my $s = shift;
	my $db_name = shift;

	my $db = Loom::DB::GNU->new($db_name);
	my $kv = Loom::Format::KV->new;

	my $count = 0;
	my $verb = "";

	while (1)
		{
		my $line = <>;
		last if !defined $line;

		$count++;
		$kv->put($line);

		my @rsp = $kv->get;
		next if @rsp == 0;

		$verb = shift @rsp;
		last if $verb eq "!" || $verb eq "E";
		next if $verb ne "P";

		my $key = shift @rsp;
		my $val = shift @rsp;
		$db->put($key,$val);
		}

	$db->finish;

	print STDERR "ERROR on line $count\n" if $verb eq "!";

	return;
	}

sub usage
	{
	my $s = shift;

	my $prog = $0;
	print STDERR <<EOM;
Usage: $prog db_name

Loads the database from stdin in standard KV string format.  See gdbm_dump -h
for details.
EOM
	exit(2);
	}
