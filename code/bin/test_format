#!/usr/bin/perl -w
use strict;

use FindBin;
my $TOP;
BEGIN { $TOP = "$FindBin::RealBin/../.." }
use lib "$TOP/code";

use Getopt::Long;
use Loom::KV;
use Loom::Quote::C;

main->new->run;

# LATER integrate this into test suite

sub new
	{
	my $class = shift;

	my $s = bless({},$class);
	$s->{C} = Loom::Quote::C->new;
	$s->{ok} = 1;
	return $s;
	}

sub run
	{
	my $s = shift;

	$s->test_parse_lines;
	$s->test_parse_kv;

	#$s->test_quote("  abc def - \n\n \003\007\nfoobar \"hi\"  ");
	#$s->test_quote("\000\000 hi \t\t \015\n\n  ");

	if ($s->{ok})
		{
		print "All tests succeeded.\n";
		}
	else
		{
		print "ERROR: Some tests failed.\n";
		}

	return;
	}

sub test_parse_lines
	{
	my $s = shift;

	my $input =
		qq{abc\n}.
		qq{defg\015\nhij\nkl\011m"n"o\015\n}.
		qq{\015\n}.
		qq{pqrstuvwxyz};

	my $expect = <<'EOM';
line "abc"
line "defg"
line "hij"
line "kl\tm\"n\"o"
line ""
line "pqrstuvwxyz"
EOM

	my $result = "";

	for my $line (split(/\r?\n/,$input))
		{
		my $q_line = $s->{C}->quote($line);
		$result .= qq{line "$q_line"\n};
		}

	if ($result eq $expect)
		{
		print "test_parse_lines : success\n";
		}
	else
		{
		$s->{ok} = 0;
		print <<EOM;
test_parse_lines : fail
== result
$result
== expect
$expect
EOM
		}

	return;
	}

sub test_parse_kv
	{
	my $s = shift;

	my $input = <<EOM;
Stuff up here to skip.
(
:x123
=123

# embedded comment
:x24
=24
:x25
strange line here instead of value
=25
# another comment here


strange line here instead of key
:x26
=26
)
extra stuff on the end.
(
:x99
=99
)
EOM

	my $expect = <<EOM;
:x123
=123
:x24
=24
:x25
=25
:x26
=26
:x99
=99
EOM

	my $kv = Loom::KV->new;
	my $hash = $kv->hash($input);
	my $result = $kv->text($hash);

	if ($result eq $expect)
		{
		print "test_parse_kv : success\n";
		}
	else
		{
		$s->{ok} = 0;
		print <<EOM;
test_parse_kv : fail
== result
$result
== expect
$expect
EOM
		}

	return;
	}

# For example:
#  test_quote("  abc def - \n\n \003\007\nfoobar \"hi\"  ");
#  test_quote("\000\000 hi \t\t \015\n\n  ");

sub test_quote
	{
	my $s = shift;
	my $str = shift;

	my $quote_str = $s->{C}->quote($str);
	my $test_str = $s->{C}->unquote($quote_str);

	print "quote str ='$quote_str'\n";
	print "test str  : ".($test_str eq $str)."\n";
	}
