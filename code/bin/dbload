#!/usr/bin/perl -w
use strict;

use FindBin;
my $TOP;
BEGIN { $TOP = "$FindBin::RealBin/../.." }
use lib "$TOP/code";

use Getopt::Long;
use Loom::DB::GNU;
use Loom::Quote::C;

main->new->run;

sub new
	{
	my $class = shift;
	my $s = bless({},$class);
	return $s;
	}

sub run
	{
	my $s = shift;
	my $opt = {};

	$s->usage() if !GetOptions($opt,"h");
	$s->usage() if $opt->{h};

	my $db_name = shift @ARGV;

	$s->usage() if !defined $db_name;

	if (-e $db_name)
		{
		print STDERR "The database '$db_name' already exists.\n";
		exit(2);
		}

	$s->hash_load($db_name);
	}

sub hash_load
	{
	my $s = shift;
	my $db_name = shift;

	my $db = Loom::DB::GNU->new($db_name);
	my $C = Loom::Quote::C->new;

	my $key = "";

	while (1)
		{
		my $line = <>;
		last if !defined $line;

		chomp $line;
		$line =~ s/\r$//;    # strip CR
		$line =~ s/^\s+//;   # chop any leading white space
		next if $line eq ""; # skip blank lines

		my $type = substr($line,0,1);
		next if $type ne ":" && $type ne "=";

		my $data = $C->unquote(substr($line,1));

		if ($type eq ":")
			{
			$key = $data;
			}
		else
			{
			$db->put($key,$data);
			}
		}

	$db->finish;

	return;
	}

sub usage
	{
	my $s = shift;

	my $prog = $0;
	print STDERR <<EOM;
Usage: $prog db_name

Loads the database from stdin in standard KV string format.  See gdbm_dump -h
for details.
EOM
	exit(2);
	}
