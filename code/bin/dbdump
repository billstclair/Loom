#!/usr/bin/perl -w
use strict;

use FindBin;
my $TOP;
BEGIN { $TOP = "$FindBin::RealBin/../.." }
use lib "$TOP/code";

use Getopt::Long;
use Loom::DB::GNU;
use Loom::Quote::C;

main->new->run;

sub new
	{
	my $class = shift;

	my $s = bless({},$class);
	return $s;
	}

sub run
	{
	my $s = shift;
	my $opt = {};

	$s->usage() if !GetOptions($opt,"h");
	$s->usage() if $opt->{h};

	my $db_name = $ARGV[0];

	$s->usage() if !defined $db_name;

	unless (-e $db_name)
		{
		print STDERR "The database '$db_name' does not exist.\n";
		exit(2);
		}

	$s->hash_dump($db_name);
	}

sub hash_dump
	{
	my $s = shift;
	my $db_name = shift;

	my $C = Loom::Quote::C->new;

	my $db = Loom::DB::GNU->new($db_name);

	my $key = $db->first_key;

	print "(\n";

	while (defined $key)
		{
		my $val = $db->get($key);
		print ":".$C->quote($key)."\n";
		print "=".$C->quote($val)."\n";

		$key = $db->next_key($key);
		}

	print ")\n";

	$db->finish;
	}

sub usage
	{
	my $s = shift;

	my $prog = $0;

	print STDERR <<EOM;
Usage: $prog db_name

Dumps the database to stdout in standard KV string format.  This format
consists of alternating keys and values, each on its own line.  Special
characters are quoted using C conventions.  Keys are prefixed with ':'
and values are prefixed with '='.  The entire output is enclosed in
matching '(' and ')' on separate lines.
EOM
	exit(2);
	}
