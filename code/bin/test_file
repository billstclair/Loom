#!/usr/bin/perl -w
use strict;

=pod

=head1 NAME

Stress test program for concurrent file updates

=head1 CAVEAT

I have run this test with hundreds or even thousands of processes and many
different delay factors.  I have run it hundreds of times on different file
systems including ext2, ext3, ext4, and reiserfs.  I have never seen it fail in
those situations.

HOWEVER, I have seen the test fail when running on a Linux home directory
encrypted with the "ecryptfs" layer.  In that case it fails about 10% of the
time.  This suggests that the ecryptfs software is doing something which
violates the sanctity of lock semantics when using the "flock" routine.

This exposure of such a subtle flaw in ecryptfs actually bolsters my confidence
in the thoroughness of the stress test and the strength of the underlying
Loom::File::update routine.

=cut

use FindBin;
my $TOP;
BEGIN { $TOP = "$FindBin::RealBin/../.." }

use lib "$TOP/code";

use Loom::Test::File;

Loom::Test::File->new( { TOP => $TOP } )->run;

__END__

# Copyright 2008 Patrick Chkoreff
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions
# and limitations under the License.
